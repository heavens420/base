from docx import Document

'''
提取word标题并转换为指定的excel格式
思路：
    将标题通过“=”连接(此处不可用 - 连接 因为标题里面可能会含有连字符，从而影响后面的格式化操作)，然后使用word的将文本转换为表格功能，使用 ‘=’
    分隔，将标题转换为表格，然后copy到excel即可（别忘了在表头自己加一级标题、二级标题....）
    连续标题要在同一行打印，故可以根据前后两个标题的插值(为1)，或直接根据大小比较(对于正常标题格式文档，即所有标题都是从1级标题开始可用此差值标
    题比较法，否则不适用)来确定是否属于连续标题，从而实现在同一行打印，要补充的是，不可以用当前标题与下一个标题比较，而必须用当前标题与前一个标题
    比较，这样做的目的是，连续标题的最后一个标题无法正常判断，例：1，2，3，4个级别的标题到第四个连续标题时，要取下一个非连续标题，此时和4作比较
    肯定小于4(正常标题文档)，那么4级标题将无法判断正常打印 为了方便和前一级标题比较，可以先将一级标题打印出来 然后再处理一级标题之后的标题，就可
    以避免数组越界问题
'''

# 获取文档源
# path = 'C:\\Users\\420\\Desktop\\kdgc\\中国电信新一代云网运营业务系统采控中心RES OPEN API接口规范-ITMS+专业分册（2021年试行版）.mydocx'
path = r'C:\Users\420\Desktop\IPC接口测试\IP测试记录汇总20210715.mydocx'
obj = Document(path)
# 将所有文档标题对象存入列表，这里多此一举 转换为列表的目的是为了便于通过索引灵活获取当前标题的前后标题
titles = [content for content in obj.paragraphs if str(content.style.name).startswith("Heading")]
# print(titles)

# 遍历筛选后的标题对象
for i in range(len(titles)):
    # 获取标题级别
    title = titles[i].style.name
    # 获取标题名称
    text = titles[i].text
    # 获取当前标题的级别数字 即一级标题 --> 1 二级标题 --> 2
    current_level = int(title[-1:])
    # 如果当前非一级标题，则可以获得前一级标题(这里不存在0级标题 所以避免越界的处理)
    if i > 0:
        # 这里同样获取的是级别数字
        pre_level = int(titles[i - 1].style.name[-1:])
    else:
        # 这里为啥多此一举写个else 纯属是为了 消灭一个警告 本无意义
        pre_level = 0
    # 同样是避免越界的处理 当遍历到最后一个标题时，下一个标题为空 避免越界 给最后一个标题的后面 强行添加一个不存在的标题
    if i == len(titles) - 1:
        # 这个级别随便定 别是1就行(是1也不是不行 文档最后一个一级标题不会换行 还得手动处理 麻烦 )
        next_level = 10000
    else:
        # 获取下一个标题级别数字
        next_level = int(titles[i + 1].style.name[-1:])
    # 如果当前是一级标题，特殊处理，为的是所有标题都必须有前一级标题，方便做比较来确定是否属于连续标题 需要在同一行打印
    if current_level == 1:
        # 同时判断下一级标题是否为一级标题 如果不是 打印当前标题不换行 为了在同一行打印后面的连续标题
        if next_level != 1:
            # 这里加个判断的目的在于 对于上面的标题如果是个光杆标题就不会执行58行那么下一个标题直接执行下面的换行操作就会多一个空行出来
            if pre_level != 1:
                # 此处先打印个换行的目的是为了 58行else执行完后 又开始了一个新的1,2,3...级标题的循环当然得是新的一行开始
                # （为什么不在58行后面的代码中换行，因为58行else部分需要打印连续标题 无法处理是否需要换行）
                print()
            # 既然当前是一级标题而且下一个标题不是一级标题 那说明属于连续标题 当然不能换行
            print(text, end="=")
        else:
            # 下一个标题是也是一级标题(当前标题是个光棍标题) 当前标题换行妥妥的
            print(text)
    else:
        # 处理非一级标题
        # 判断是否为连续标题
        if pre_level < current_level:
            # for j in range(int(current_level) - 1):
            #     print("==", end="")
            # 连续标题则 使用 “=” 连接每一个标题
            print(text, end="=")
        else:
            # 非连续标题处理
            # 先对上面的连续同行打印换个行 因为走到这 说明上面的连续已经走到头了 换行没话说
            print()
            # 打印“=”占位符 为的是 文本转表格的划分标识  几级标题前面就有几个 “=” 再减一(因为当前标题内容也占位置 当然得减一)
            for j in range(int(current_level) - 1):
                # 打印占位符当然不能换行 不然不就连不上标题内容了
                print("=", end="")
            # 打印完占位符 加上当前标题内容
            print(text, end="=")
